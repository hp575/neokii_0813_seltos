#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_180823419254858442) {
   out_180823419254858442[0] = 0;
   out_180823419254858442[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_180823419254858442[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_180823419254858442[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_180823419254858442[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_180823419254858442[5] = -sin(in_vec[1]);
   out_180823419254858442[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_180823419254858442[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_180823419254858442[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_180823419254858442[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_180823419254858442[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_180823419254858442[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_180823419254858442[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_180823419254858442[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_180823419254858442[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_180823419254858442[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_180823419254858442[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_180823419254858442[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_382937832037016470) {
   out_382937832037016470[0] = delta_x[0] + nom_x[0];
   out_382937832037016470[1] = delta_x[1] + nom_x[1];
   out_382937832037016470[2] = delta_x[2] + nom_x[2];
   out_382937832037016470[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_382937832037016470[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_382937832037016470[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_382937832037016470[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_382937832037016470[7] = delta_x[6] + nom_x[7];
   out_382937832037016470[8] = delta_x[7] + nom_x[8];
   out_382937832037016470[9] = delta_x[8] + nom_x[9];
   out_382937832037016470[10] = delta_x[9] + nom_x[10];
   out_382937832037016470[11] = delta_x[10] + nom_x[11];
   out_382937832037016470[12] = delta_x[11] + nom_x[12];
   out_382937832037016470[13] = delta_x[12] + nom_x[13];
   out_382937832037016470[14] = delta_x[13] + nom_x[14];
   out_382937832037016470[15] = delta_x[14] + nom_x[15];
   out_382937832037016470[16] = delta_x[15] + nom_x[16];
   out_382937832037016470[17] = delta_x[16] + nom_x[17];
   out_382937832037016470[18] = delta_x[17] + nom_x[18];
   out_382937832037016470[19] = delta_x[18] + nom_x[19];
   out_382937832037016470[20] = delta_x[19] + nom_x[20];
   out_382937832037016470[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6356608129355425497) {
   out_6356608129355425497[0] = -nom_x[0] + true_x[0];
   out_6356608129355425497[1] = -nom_x[1] + true_x[1];
   out_6356608129355425497[2] = -nom_x[2] + true_x[2];
   out_6356608129355425497[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6356608129355425497[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6356608129355425497[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6356608129355425497[6] = -nom_x[7] + true_x[7];
   out_6356608129355425497[7] = -nom_x[8] + true_x[8];
   out_6356608129355425497[8] = -nom_x[9] + true_x[9];
   out_6356608129355425497[9] = -nom_x[10] + true_x[10];
   out_6356608129355425497[10] = -nom_x[11] + true_x[11];
   out_6356608129355425497[11] = -nom_x[12] + true_x[12];
   out_6356608129355425497[12] = -nom_x[13] + true_x[13];
   out_6356608129355425497[13] = -nom_x[14] + true_x[14];
   out_6356608129355425497[14] = -nom_x[15] + true_x[15];
   out_6356608129355425497[15] = -nom_x[16] + true_x[16];
   out_6356608129355425497[16] = -nom_x[17] + true_x[17];
   out_6356608129355425497[17] = -nom_x[18] + true_x[18];
   out_6356608129355425497[18] = -nom_x[19] + true_x[19];
   out_6356608129355425497[19] = -nom_x[20] + true_x[20];
   out_6356608129355425497[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6159620833474390477) {
   out_6159620833474390477[0] = 1.0;
   out_6159620833474390477[1] = 0.0;
   out_6159620833474390477[2] = 0.0;
   out_6159620833474390477[3] = 0.0;
   out_6159620833474390477[4] = 0.0;
   out_6159620833474390477[5] = 0.0;
   out_6159620833474390477[6] = 0.0;
   out_6159620833474390477[7] = 0.0;
   out_6159620833474390477[8] = 0.0;
   out_6159620833474390477[9] = 0.0;
   out_6159620833474390477[10] = 0.0;
   out_6159620833474390477[11] = 0.0;
   out_6159620833474390477[12] = 0.0;
   out_6159620833474390477[13] = 0.0;
   out_6159620833474390477[14] = 0.0;
   out_6159620833474390477[15] = 0.0;
   out_6159620833474390477[16] = 0.0;
   out_6159620833474390477[17] = 0.0;
   out_6159620833474390477[18] = 0.0;
   out_6159620833474390477[19] = 0.0;
   out_6159620833474390477[20] = 0.0;
   out_6159620833474390477[21] = 0.0;
   out_6159620833474390477[22] = 1.0;
   out_6159620833474390477[23] = 0.0;
   out_6159620833474390477[24] = 0.0;
   out_6159620833474390477[25] = 0.0;
   out_6159620833474390477[26] = 0.0;
   out_6159620833474390477[27] = 0.0;
   out_6159620833474390477[28] = 0.0;
   out_6159620833474390477[29] = 0.0;
   out_6159620833474390477[30] = 0.0;
   out_6159620833474390477[31] = 0.0;
   out_6159620833474390477[32] = 0.0;
   out_6159620833474390477[33] = 0.0;
   out_6159620833474390477[34] = 0.0;
   out_6159620833474390477[35] = 0.0;
   out_6159620833474390477[36] = 0.0;
   out_6159620833474390477[37] = 0.0;
   out_6159620833474390477[38] = 0.0;
   out_6159620833474390477[39] = 0.0;
   out_6159620833474390477[40] = 0.0;
   out_6159620833474390477[41] = 0.0;
   out_6159620833474390477[42] = 0.0;
   out_6159620833474390477[43] = 0.0;
   out_6159620833474390477[44] = 1.0;
   out_6159620833474390477[45] = 0.0;
   out_6159620833474390477[46] = 0.0;
   out_6159620833474390477[47] = 0.0;
   out_6159620833474390477[48] = 0.0;
   out_6159620833474390477[49] = 0.0;
   out_6159620833474390477[50] = 0.0;
   out_6159620833474390477[51] = 0.0;
   out_6159620833474390477[52] = 0.0;
   out_6159620833474390477[53] = 0.0;
   out_6159620833474390477[54] = 0.0;
   out_6159620833474390477[55] = 0.0;
   out_6159620833474390477[56] = 0.0;
   out_6159620833474390477[57] = 0.0;
   out_6159620833474390477[58] = 0.0;
   out_6159620833474390477[59] = 0.0;
   out_6159620833474390477[60] = 0.0;
   out_6159620833474390477[61] = 0.0;
   out_6159620833474390477[62] = 0.0;
   out_6159620833474390477[63] = 0.0;
   out_6159620833474390477[64] = 0.0;
   out_6159620833474390477[65] = 0.0;
   out_6159620833474390477[66] = -0.5*state[4];
   out_6159620833474390477[67] = -0.5*state[5];
   out_6159620833474390477[68] = -0.5*state[6];
   out_6159620833474390477[69] = 0.0;
   out_6159620833474390477[70] = 0.0;
   out_6159620833474390477[71] = 0.0;
   out_6159620833474390477[72] = 0.0;
   out_6159620833474390477[73] = 0.0;
   out_6159620833474390477[74] = 0.0;
   out_6159620833474390477[75] = 0.0;
   out_6159620833474390477[76] = 0.0;
   out_6159620833474390477[77] = 0.0;
   out_6159620833474390477[78] = 0.0;
   out_6159620833474390477[79] = 0.0;
   out_6159620833474390477[80] = 0.0;
   out_6159620833474390477[81] = 0.0;
   out_6159620833474390477[82] = 0.0;
   out_6159620833474390477[83] = 0.0;
   out_6159620833474390477[84] = 0.0;
   out_6159620833474390477[85] = 0.0;
   out_6159620833474390477[86] = 0.0;
   out_6159620833474390477[87] = 0.5*state[3];
   out_6159620833474390477[88] = 0.5*state[6];
   out_6159620833474390477[89] = -0.5*state[5];
   out_6159620833474390477[90] = 0.0;
   out_6159620833474390477[91] = 0.0;
   out_6159620833474390477[92] = 0.0;
   out_6159620833474390477[93] = 0.0;
   out_6159620833474390477[94] = 0.0;
   out_6159620833474390477[95] = 0.0;
   out_6159620833474390477[96] = 0.0;
   out_6159620833474390477[97] = 0.0;
   out_6159620833474390477[98] = 0.0;
   out_6159620833474390477[99] = 0.0;
   out_6159620833474390477[100] = 0.0;
   out_6159620833474390477[101] = 0.0;
   out_6159620833474390477[102] = 0.0;
   out_6159620833474390477[103] = 0.0;
   out_6159620833474390477[104] = 0.0;
   out_6159620833474390477[105] = 0.0;
   out_6159620833474390477[106] = 0.0;
   out_6159620833474390477[107] = 0.0;
   out_6159620833474390477[108] = -0.5*state[6];
   out_6159620833474390477[109] = 0.5*state[3];
   out_6159620833474390477[110] = 0.5*state[4];
   out_6159620833474390477[111] = 0.0;
   out_6159620833474390477[112] = 0.0;
   out_6159620833474390477[113] = 0.0;
   out_6159620833474390477[114] = 0.0;
   out_6159620833474390477[115] = 0.0;
   out_6159620833474390477[116] = 0.0;
   out_6159620833474390477[117] = 0.0;
   out_6159620833474390477[118] = 0.0;
   out_6159620833474390477[119] = 0.0;
   out_6159620833474390477[120] = 0.0;
   out_6159620833474390477[121] = 0.0;
   out_6159620833474390477[122] = 0.0;
   out_6159620833474390477[123] = 0.0;
   out_6159620833474390477[124] = 0.0;
   out_6159620833474390477[125] = 0.0;
   out_6159620833474390477[126] = 0.0;
   out_6159620833474390477[127] = 0.0;
   out_6159620833474390477[128] = 0.0;
   out_6159620833474390477[129] = 0.5*state[5];
   out_6159620833474390477[130] = -0.5*state[4];
   out_6159620833474390477[131] = 0.5*state[3];
   out_6159620833474390477[132] = 0.0;
   out_6159620833474390477[133] = 0.0;
   out_6159620833474390477[134] = 0.0;
   out_6159620833474390477[135] = 0.0;
   out_6159620833474390477[136] = 0.0;
   out_6159620833474390477[137] = 0.0;
   out_6159620833474390477[138] = 0.0;
   out_6159620833474390477[139] = 0.0;
   out_6159620833474390477[140] = 0.0;
   out_6159620833474390477[141] = 0.0;
   out_6159620833474390477[142] = 0.0;
   out_6159620833474390477[143] = 0.0;
   out_6159620833474390477[144] = 0.0;
   out_6159620833474390477[145] = 0.0;
   out_6159620833474390477[146] = 0.0;
   out_6159620833474390477[147] = 0.0;
   out_6159620833474390477[148] = 0.0;
   out_6159620833474390477[149] = 0.0;
   out_6159620833474390477[150] = 0.0;
   out_6159620833474390477[151] = 0.0;
   out_6159620833474390477[152] = 0.0;
   out_6159620833474390477[153] = 1.0;
   out_6159620833474390477[154] = 0.0;
   out_6159620833474390477[155] = 0.0;
   out_6159620833474390477[156] = 0.0;
   out_6159620833474390477[157] = 0.0;
   out_6159620833474390477[158] = 0.0;
   out_6159620833474390477[159] = 0.0;
   out_6159620833474390477[160] = 0.0;
   out_6159620833474390477[161] = 0.0;
   out_6159620833474390477[162] = 0.0;
   out_6159620833474390477[163] = 0.0;
   out_6159620833474390477[164] = 0.0;
   out_6159620833474390477[165] = 0.0;
   out_6159620833474390477[166] = 0.0;
   out_6159620833474390477[167] = 0.0;
   out_6159620833474390477[168] = 0.0;
   out_6159620833474390477[169] = 0.0;
   out_6159620833474390477[170] = 0.0;
   out_6159620833474390477[171] = 0.0;
   out_6159620833474390477[172] = 0.0;
   out_6159620833474390477[173] = 0.0;
   out_6159620833474390477[174] = 0.0;
   out_6159620833474390477[175] = 1.0;
   out_6159620833474390477[176] = 0.0;
   out_6159620833474390477[177] = 0.0;
   out_6159620833474390477[178] = 0.0;
   out_6159620833474390477[179] = 0.0;
   out_6159620833474390477[180] = 0.0;
   out_6159620833474390477[181] = 0.0;
   out_6159620833474390477[182] = 0.0;
   out_6159620833474390477[183] = 0.0;
   out_6159620833474390477[184] = 0.0;
   out_6159620833474390477[185] = 0.0;
   out_6159620833474390477[186] = 0.0;
   out_6159620833474390477[187] = 0.0;
   out_6159620833474390477[188] = 0.0;
   out_6159620833474390477[189] = 0.0;
   out_6159620833474390477[190] = 0.0;
   out_6159620833474390477[191] = 0.0;
   out_6159620833474390477[192] = 0.0;
   out_6159620833474390477[193] = 0.0;
   out_6159620833474390477[194] = 0.0;
   out_6159620833474390477[195] = 0.0;
   out_6159620833474390477[196] = 0.0;
   out_6159620833474390477[197] = 1.0;
   out_6159620833474390477[198] = 0.0;
   out_6159620833474390477[199] = 0.0;
   out_6159620833474390477[200] = 0.0;
   out_6159620833474390477[201] = 0.0;
   out_6159620833474390477[202] = 0.0;
   out_6159620833474390477[203] = 0.0;
   out_6159620833474390477[204] = 0.0;
   out_6159620833474390477[205] = 0.0;
   out_6159620833474390477[206] = 0.0;
   out_6159620833474390477[207] = 0.0;
   out_6159620833474390477[208] = 0.0;
   out_6159620833474390477[209] = 0.0;
   out_6159620833474390477[210] = 0.0;
   out_6159620833474390477[211] = 0.0;
   out_6159620833474390477[212] = 0.0;
   out_6159620833474390477[213] = 0.0;
   out_6159620833474390477[214] = 0.0;
   out_6159620833474390477[215] = 0.0;
   out_6159620833474390477[216] = 0.0;
   out_6159620833474390477[217] = 0.0;
   out_6159620833474390477[218] = 0.0;
   out_6159620833474390477[219] = 1.0;
   out_6159620833474390477[220] = 0.0;
   out_6159620833474390477[221] = 0.0;
   out_6159620833474390477[222] = 0.0;
   out_6159620833474390477[223] = 0.0;
   out_6159620833474390477[224] = 0.0;
   out_6159620833474390477[225] = 0.0;
   out_6159620833474390477[226] = 0.0;
   out_6159620833474390477[227] = 0.0;
   out_6159620833474390477[228] = 0.0;
   out_6159620833474390477[229] = 0.0;
   out_6159620833474390477[230] = 0.0;
   out_6159620833474390477[231] = 0.0;
   out_6159620833474390477[232] = 0.0;
   out_6159620833474390477[233] = 0.0;
   out_6159620833474390477[234] = 0.0;
   out_6159620833474390477[235] = 0.0;
   out_6159620833474390477[236] = 0.0;
   out_6159620833474390477[237] = 0.0;
   out_6159620833474390477[238] = 0.0;
   out_6159620833474390477[239] = 0.0;
   out_6159620833474390477[240] = 0.0;
   out_6159620833474390477[241] = 1.0;
   out_6159620833474390477[242] = 0.0;
   out_6159620833474390477[243] = 0.0;
   out_6159620833474390477[244] = 0.0;
   out_6159620833474390477[245] = 0.0;
   out_6159620833474390477[246] = 0.0;
   out_6159620833474390477[247] = 0.0;
   out_6159620833474390477[248] = 0.0;
   out_6159620833474390477[249] = 0.0;
   out_6159620833474390477[250] = 0.0;
   out_6159620833474390477[251] = 0.0;
   out_6159620833474390477[252] = 0.0;
   out_6159620833474390477[253] = 0.0;
   out_6159620833474390477[254] = 0.0;
   out_6159620833474390477[255] = 0.0;
   out_6159620833474390477[256] = 0.0;
   out_6159620833474390477[257] = 0.0;
   out_6159620833474390477[258] = 0.0;
   out_6159620833474390477[259] = 0.0;
   out_6159620833474390477[260] = 0.0;
   out_6159620833474390477[261] = 0.0;
   out_6159620833474390477[262] = 0.0;
   out_6159620833474390477[263] = 1.0;
   out_6159620833474390477[264] = 0.0;
   out_6159620833474390477[265] = 0.0;
   out_6159620833474390477[266] = 0.0;
   out_6159620833474390477[267] = 0.0;
   out_6159620833474390477[268] = 0.0;
   out_6159620833474390477[269] = 0.0;
   out_6159620833474390477[270] = 0.0;
   out_6159620833474390477[271] = 0.0;
   out_6159620833474390477[272] = 0.0;
   out_6159620833474390477[273] = 0.0;
   out_6159620833474390477[274] = 0.0;
   out_6159620833474390477[275] = 0.0;
   out_6159620833474390477[276] = 0.0;
   out_6159620833474390477[277] = 0.0;
   out_6159620833474390477[278] = 0.0;
   out_6159620833474390477[279] = 0.0;
   out_6159620833474390477[280] = 0.0;
   out_6159620833474390477[281] = 0.0;
   out_6159620833474390477[282] = 0.0;
   out_6159620833474390477[283] = 0.0;
   out_6159620833474390477[284] = 0.0;
   out_6159620833474390477[285] = 1.0;
   out_6159620833474390477[286] = 0.0;
   out_6159620833474390477[287] = 0.0;
   out_6159620833474390477[288] = 0.0;
   out_6159620833474390477[289] = 0.0;
   out_6159620833474390477[290] = 0.0;
   out_6159620833474390477[291] = 0.0;
   out_6159620833474390477[292] = 0.0;
   out_6159620833474390477[293] = 0.0;
   out_6159620833474390477[294] = 0.0;
   out_6159620833474390477[295] = 0.0;
   out_6159620833474390477[296] = 0.0;
   out_6159620833474390477[297] = 0.0;
   out_6159620833474390477[298] = 0.0;
   out_6159620833474390477[299] = 0.0;
   out_6159620833474390477[300] = 0.0;
   out_6159620833474390477[301] = 0.0;
   out_6159620833474390477[302] = 0.0;
   out_6159620833474390477[303] = 0.0;
   out_6159620833474390477[304] = 0.0;
   out_6159620833474390477[305] = 0.0;
   out_6159620833474390477[306] = 0.0;
   out_6159620833474390477[307] = 1.0;
   out_6159620833474390477[308] = 0.0;
   out_6159620833474390477[309] = 0.0;
   out_6159620833474390477[310] = 0.0;
   out_6159620833474390477[311] = 0.0;
   out_6159620833474390477[312] = 0.0;
   out_6159620833474390477[313] = 0.0;
   out_6159620833474390477[314] = 0.0;
   out_6159620833474390477[315] = 0.0;
   out_6159620833474390477[316] = 0.0;
   out_6159620833474390477[317] = 0.0;
   out_6159620833474390477[318] = 0.0;
   out_6159620833474390477[319] = 0.0;
   out_6159620833474390477[320] = 0.0;
   out_6159620833474390477[321] = 0.0;
   out_6159620833474390477[322] = 0.0;
   out_6159620833474390477[323] = 0.0;
   out_6159620833474390477[324] = 0.0;
   out_6159620833474390477[325] = 0.0;
   out_6159620833474390477[326] = 0.0;
   out_6159620833474390477[327] = 0.0;
   out_6159620833474390477[328] = 0.0;
   out_6159620833474390477[329] = 1.0;
   out_6159620833474390477[330] = 0.0;
   out_6159620833474390477[331] = 0.0;
   out_6159620833474390477[332] = 0.0;
   out_6159620833474390477[333] = 0.0;
   out_6159620833474390477[334] = 0.0;
   out_6159620833474390477[335] = 0.0;
   out_6159620833474390477[336] = 0.0;
   out_6159620833474390477[337] = 0.0;
   out_6159620833474390477[338] = 0.0;
   out_6159620833474390477[339] = 0.0;
   out_6159620833474390477[340] = 0.0;
   out_6159620833474390477[341] = 0.0;
   out_6159620833474390477[342] = 0.0;
   out_6159620833474390477[343] = 0.0;
   out_6159620833474390477[344] = 0.0;
   out_6159620833474390477[345] = 0.0;
   out_6159620833474390477[346] = 0.0;
   out_6159620833474390477[347] = 0.0;
   out_6159620833474390477[348] = 0.0;
   out_6159620833474390477[349] = 0.0;
   out_6159620833474390477[350] = 0.0;
   out_6159620833474390477[351] = 1.0;
   out_6159620833474390477[352] = 0.0;
   out_6159620833474390477[353] = 0.0;
   out_6159620833474390477[354] = 0.0;
   out_6159620833474390477[355] = 0.0;
   out_6159620833474390477[356] = 0.0;
   out_6159620833474390477[357] = 0.0;
   out_6159620833474390477[358] = 0.0;
   out_6159620833474390477[359] = 0.0;
   out_6159620833474390477[360] = 0.0;
   out_6159620833474390477[361] = 0.0;
   out_6159620833474390477[362] = 0.0;
   out_6159620833474390477[363] = 0.0;
   out_6159620833474390477[364] = 0.0;
   out_6159620833474390477[365] = 0.0;
   out_6159620833474390477[366] = 0.0;
   out_6159620833474390477[367] = 0.0;
   out_6159620833474390477[368] = 0.0;
   out_6159620833474390477[369] = 0.0;
   out_6159620833474390477[370] = 0.0;
   out_6159620833474390477[371] = 0.0;
   out_6159620833474390477[372] = 0.0;
   out_6159620833474390477[373] = 1.0;
   out_6159620833474390477[374] = 0.0;
   out_6159620833474390477[375] = 0.0;
   out_6159620833474390477[376] = 0.0;
   out_6159620833474390477[377] = 0.0;
   out_6159620833474390477[378] = 0.0;
   out_6159620833474390477[379] = 0.0;
   out_6159620833474390477[380] = 0.0;
   out_6159620833474390477[381] = 0.0;
   out_6159620833474390477[382] = 0.0;
   out_6159620833474390477[383] = 0.0;
   out_6159620833474390477[384] = 0.0;
   out_6159620833474390477[385] = 0.0;
   out_6159620833474390477[386] = 0.0;
   out_6159620833474390477[387] = 0.0;
   out_6159620833474390477[388] = 0.0;
   out_6159620833474390477[389] = 0.0;
   out_6159620833474390477[390] = 0.0;
   out_6159620833474390477[391] = 0.0;
   out_6159620833474390477[392] = 0.0;
   out_6159620833474390477[393] = 0.0;
   out_6159620833474390477[394] = 0.0;
   out_6159620833474390477[395] = 1.0;
   out_6159620833474390477[396] = 0.0;
   out_6159620833474390477[397] = 0.0;
   out_6159620833474390477[398] = 0.0;
   out_6159620833474390477[399] = 0.0;
   out_6159620833474390477[400] = 0.0;
   out_6159620833474390477[401] = 0.0;
   out_6159620833474390477[402] = 0.0;
   out_6159620833474390477[403] = 0.0;
   out_6159620833474390477[404] = 0.0;
   out_6159620833474390477[405] = 0.0;
   out_6159620833474390477[406] = 0.0;
   out_6159620833474390477[407] = 0.0;
   out_6159620833474390477[408] = 0.0;
   out_6159620833474390477[409] = 0.0;
   out_6159620833474390477[410] = 0.0;
   out_6159620833474390477[411] = 0.0;
   out_6159620833474390477[412] = 0.0;
   out_6159620833474390477[413] = 0.0;
   out_6159620833474390477[414] = 0.0;
   out_6159620833474390477[415] = 0.0;
   out_6159620833474390477[416] = 0.0;
   out_6159620833474390477[417] = 1.0;
   out_6159620833474390477[418] = 0.0;
   out_6159620833474390477[419] = 0.0;
   out_6159620833474390477[420] = 0.0;
   out_6159620833474390477[421] = 0.0;
   out_6159620833474390477[422] = 0.0;
   out_6159620833474390477[423] = 0.0;
   out_6159620833474390477[424] = 0.0;
   out_6159620833474390477[425] = 0.0;
   out_6159620833474390477[426] = 0.0;
   out_6159620833474390477[427] = 0.0;
   out_6159620833474390477[428] = 0.0;
   out_6159620833474390477[429] = 0.0;
   out_6159620833474390477[430] = 0.0;
   out_6159620833474390477[431] = 0.0;
   out_6159620833474390477[432] = 0.0;
   out_6159620833474390477[433] = 0.0;
   out_6159620833474390477[434] = 0.0;
   out_6159620833474390477[435] = 0.0;
   out_6159620833474390477[436] = 0.0;
   out_6159620833474390477[437] = 0.0;
   out_6159620833474390477[438] = 0.0;
   out_6159620833474390477[439] = 1.0;
   out_6159620833474390477[440] = 0.0;
   out_6159620833474390477[441] = 0.0;
   out_6159620833474390477[442] = 0.0;
   out_6159620833474390477[443] = 0.0;
   out_6159620833474390477[444] = 0.0;
   out_6159620833474390477[445] = 0.0;
   out_6159620833474390477[446] = 0.0;
   out_6159620833474390477[447] = 0.0;
   out_6159620833474390477[448] = 0.0;
   out_6159620833474390477[449] = 0.0;
   out_6159620833474390477[450] = 0.0;
   out_6159620833474390477[451] = 0.0;
   out_6159620833474390477[452] = 0.0;
   out_6159620833474390477[453] = 0.0;
   out_6159620833474390477[454] = 0.0;
   out_6159620833474390477[455] = 0.0;
   out_6159620833474390477[456] = 0.0;
   out_6159620833474390477[457] = 0.0;
   out_6159620833474390477[458] = 0.0;
   out_6159620833474390477[459] = 0.0;
   out_6159620833474390477[460] = 0.0;
   out_6159620833474390477[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6910680473094794463) {
   out_6910680473094794463[0] = dt*state[7] + state[0];
   out_6910680473094794463[1] = dt*state[8] + state[1];
   out_6910680473094794463[2] = dt*state[9] + state[2];
   out_6910680473094794463[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6910680473094794463[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6910680473094794463[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6910680473094794463[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6910680473094794463[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6910680473094794463[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6910680473094794463[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6910680473094794463[10] = state[10];
   out_6910680473094794463[11] = state[11];
   out_6910680473094794463[12] = state[12];
   out_6910680473094794463[13] = state[13];
   out_6910680473094794463[14] = state[14];
   out_6910680473094794463[15] = state[15];
   out_6910680473094794463[16] = state[16];
   out_6910680473094794463[17] = state[17];
   out_6910680473094794463[18] = state[18];
   out_6910680473094794463[19] = state[19];
   out_6910680473094794463[20] = state[20];
   out_6910680473094794463[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2569738049418641073) {
   out_2569738049418641073[0] = 1;
   out_2569738049418641073[1] = 0;
   out_2569738049418641073[2] = 0;
   out_2569738049418641073[3] = 0;
   out_2569738049418641073[4] = 0;
   out_2569738049418641073[5] = 0;
   out_2569738049418641073[6] = dt;
   out_2569738049418641073[7] = 0;
   out_2569738049418641073[8] = 0;
   out_2569738049418641073[9] = 0;
   out_2569738049418641073[10] = 0;
   out_2569738049418641073[11] = 0;
   out_2569738049418641073[12] = 0;
   out_2569738049418641073[13] = 0;
   out_2569738049418641073[14] = 0;
   out_2569738049418641073[15] = 0;
   out_2569738049418641073[16] = 0;
   out_2569738049418641073[17] = 0;
   out_2569738049418641073[18] = 0;
   out_2569738049418641073[19] = 0;
   out_2569738049418641073[20] = 0;
   out_2569738049418641073[21] = 0;
   out_2569738049418641073[22] = 1;
   out_2569738049418641073[23] = 0;
   out_2569738049418641073[24] = 0;
   out_2569738049418641073[25] = 0;
   out_2569738049418641073[26] = 0;
   out_2569738049418641073[27] = 0;
   out_2569738049418641073[28] = dt;
   out_2569738049418641073[29] = 0;
   out_2569738049418641073[30] = 0;
   out_2569738049418641073[31] = 0;
   out_2569738049418641073[32] = 0;
   out_2569738049418641073[33] = 0;
   out_2569738049418641073[34] = 0;
   out_2569738049418641073[35] = 0;
   out_2569738049418641073[36] = 0;
   out_2569738049418641073[37] = 0;
   out_2569738049418641073[38] = 0;
   out_2569738049418641073[39] = 0;
   out_2569738049418641073[40] = 0;
   out_2569738049418641073[41] = 0;
   out_2569738049418641073[42] = 0;
   out_2569738049418641073[43] = 0;
   out_2569738049418641073[44] = 1;
   out_2569738049418641073[45] = 0;
   out_2569738049418641073[46] = 0;
   out_2569738049418641073[47] = 0;
   out_2569738049418641073[48] = 0;
   out_2569738049418641073[49] = 0;
   out_2569738049418641073[50] = dt;
   out_2569738049418641073[51] = 0;
   out_2569738049418641073[52] = 0;
   out_2569738049418641073[53] = 0;
   out_2569738049418641073[54] = 0;
   out_2569738049418641073[55] = 0;
   out_2569738049418641073[56] = 0;
   out_2569738049418641073[57] = 0;
   out_2569738049418641073[58] = 0;
   out_2569738049418641073[59] = 0;
   out_2569738049418641073[60] = 0;
   out_2569738049418641073[61] = 0;
   out_2569738049418641073[62] = 0;
   out_2569738049418641073[63] = 0;
   out_2569738049418641073[64] = 0;
   out_2569738049418641073[65] = 0;
   out_2569738049418641073[66] = 1;
   out_2569738049418641073[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2569738049418641073[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2569738049418641073[69] = 0;
   out_2569738049418641073[70] = 0;
   out_2569738049418641073[71] = 0;
   out_2569738049418641073[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2569738049418641073[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2569738049418641073[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2569738049418641073[75] = 0;
   out_2569738049418641073[76] = 0;
   out_2569738049418641073[77] = 0;
   out_2569738049418641073[78] = 0;
   out_2569738049418641073[79] = 0;
   out_2569738049418641073[80] = 0;
   out_2569738049418641073[81] = 0;
   out_2569738049418641073[82] = 0;
   out_2569738049418641073[83] = 0;
   out_2569738049418641073[84] = 0;
   out_2569738049418641073[85] = 0;
   out_2569738049418641073[86] = 0;
   out_2569738049418641073[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2569738049418641073[88] = 1;
   out_2569738049418641073[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2569738049418641073[90] = 0;
   out_2569738049418641073[91] = 0;
   out_2569738049418641073[92] = 0;
   out_2569738049418641073[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2569738049418641073[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2569738049418641073[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2569738049418641073[96] = 0;
   out_2569738049418641073[97] = 0;
   out_2569738049418641073[98] = 0;
   out_2569738049418641073[99] = 0;
   out_2569738049418641073[100] = 0;
   out_2569738049418641073[101] = 0;
   out_2569738049418641073[102] = 0;
   out_2569738049418641073[103] = 0;
   out_2569738049418641073[104] = 0;
   out_2569738049418641073[105] = 0;
   out_2569738049418641073[106] = 0;
   out_2569738049418641073[107] = 0;
   out_2569738049418641073[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2569738049418641073[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2569738049418641073[110] = 1;
   out_2569738049418641073[111] = 0;
   out_2569738049418641073[112] = 0;
   out_2569738049418641073[113] = 0;
   out_2569738049418641073[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2569738049418641073[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2569738049418641073[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2569738049418641073[117] = 0;
   out_2569738049418641073[118] = 0;
   out_2569738049418641073[119] = 0;
   out_2569738049418641073[120] = 0;
   out_2569738049418641073[121] = 0;
   out_2569738049418641073[122] = 0;
   out_2569738049418641073[123] = 0;
   out_2569738049418641073[124] = 0;
   out_2569738049418641073[125] = 0;
   out_2569738049418641073[126] = 0;
   out_2569738049418641073[127] = 0;
   out_2569738049418641073[128] = 0;
   out_2569738049418641073[129] = 0;
   out_2569738049418641073[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2569738049418641073[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2569738049418641073[132] = 1;
   out_2569738049418641073[133] = 0;
   out_2569738049418641073[134] = 0;
   out_2569738049418641073[135] = 0;
   out_2569738049418641073[136] = 0;
   out_2569738049418641073[137] = 0;
   out_2569738049418641073[138] = 0;
   out_2569738049418641073[139] = 0;
   out_2569738049418641073[140] = 0;
   out_2569738049418641073[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2569738049418641073[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2569738049418641073[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2569738049418641073[144] = 0;
   out_2569738049418641073[145] = 0;
   out_2569738049418641073[146] = 0;
   out_2569738049418641073[147] = 0;
   out_2569738049418641073[148] = 0;
   out_2569738049418641073[149] = 0;
   out_2569738049418641073[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2569738049418641073[151] = 0;
   out_2569738049418641073[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2569738049418641073[153] = 0;
   out_2569738049418641073[154] = 1;
   out_2569738049418641073[155] = 0;
   out_2569738049418641073[156] = 0;
   out_2569738049418641073[157] = 0;
   out_2569738049418641073[158] = 0;
   out_2569738049418641073[159] = 0;
   out_2569738049418641073[160] = 0;
   out_2569738049418641073[161] = 0;
   out_2569738049418641073[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2569738049418641073[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2569738049418641073[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2569738049418641073[165] = 0;
   out_2569738049418641073[166] = 0;
   out_2569738049418641073[167] = 0;
   out_2569738049418641073[168] = 0;
   out_2569738049418641073[169] = 0;
   out_2569738049418641073[170] = 0;
   out_2569738049418641073[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2569738049418641073[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2569738049418641073[173] = 0;
   out_2569738049418641073[174] = 0;
   out_2569738049418641073[175] = 0;
   out_2569738049418641073[176] = 1;
   out_2569738049418641073[177] = 0;
   out_2569738049418641073[178] = 0;
   out_2569738049418641073[179] = 0;
   out_2569738049418641073[180] = 0;
   out_2569738049418641073[181] = 0;
   out_2569738049418641073[182] = 0;
   out_2569738049418641073[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2569738049418641073[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2569738049418641073[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2569738049418641073[186] = 0;
   out_2569738049418641073[187] = 0;
   out_2569738049418641073[188] = 0;
   out_2569738049418641073[189] = 0;
   out_2569738049418641073[190] = 0;
   out_2569738049418641073[191] = 0;
   out_2569738049418641073[192] = 0;
   out_2569738049418641073[193] = 0;
   out_2569738049418641073[194] = 0;
   out_2569738049418641073[195] = 0;
   out_2569738049418641073[196] = 0;
   out_2569738049418641073[197] = 0;
   out_2569738049418641073[198] = 1;
   out_2569738049418641073[199] = 0;
   out_2569738049418641073[200] = 0;
   out_2569738049418641073[201] = 0;
   out_2569738049418641073[202] = 0;
   out_2569738049418641073[203] = 0;
   out_2569738049418641073[204] = 0;
   out_2569738049418641073[205] = 0;
   out_2569738049418641073[206] = 0;
   out_2569738049418641073[207] = 0;
   out_2569738049418641073[208] = 0;
   out_2569738049418641073[209] = 0;
   out_2569738049418641073[210] = 0;
   out_2569738049418641073[211] = 0;
   out_2569738049418641073[212] = 0;
   out_2569738049418641073[213] = 0;
   out_2569738049418641073[214] = 0;
   out_2569738049418641073[215] = 0;
   out_2569738049418641073[216] = 0;
   out_2569738049418641073[217] = 0;
   out_2569738049418641073[218] = 0;
   out_2569738049418641073[219] = 0;
   out_2569738049418641073[220] = 1;
   out_2569738049418641073[221] = 0;
   out_2569738049418641073[222] = 0;
   out_2569738049418641073[223] = 0;
   out_2569738049418641073[224] = 0;
   out_2569738049418641073[225] = 0;
   out_2569738049418641073[226] = 0;
   out_2569738049418641073[227] = 0;
   out_2569738049418641073[228] = 0;
   out_2569738049418641073[229] = 0;
   out_2569738049418641073[230] = 0;
   out_2569738049418641073[231] = 0;
   out_2569738049418641073[232] = 0;
   out_2569738049418641073[233] = 0;
   out_2569738049418641073[234] = 0;
   out_2569738049418641073[235] = 0;
   out_2569738049418641073[236] = 0;
   out_2569738049418641073[237] = 0;
   out_2569738049418641073[238] = 0;
   out_2569738049418641073[239] = 0;
   out_2569738049418641073[240] = 0;
   out_2569738049418641073[241] = 0;
   out_2569738049418641073[242] = 1;
   out_2569738049418641073[243] = 0;
   out_2569738049418641073[244] = 0;
   out_2569738049418641073[245] = 0;
   out_2569738049418641073[246] = 0;
   out_2569738049418641073[247] = 0;
   out_2569738049418641073[248] = 0;
   out_2569738049418641073[249] = 0;
   out_2569738049418641073[250] = 0;
   out_2569738049418641073[251] = 0;
   out_2569738049418641073[252] = 0;
   out_2569738049418641073[253] = 0;
   out_2569738049418641073[254] = 0;
   out_2569738049418641073[255] = 0;
   out_2569738049418641073[256] = 0;
   out_2569738049418641073[257] = 0;
   out_2569738049418641073[258] = 0;
   out_2569738049418641073[259] = 0;
   out_2569738049418641073[260] = 0;
   out_2569738049418641073[261] = 0;
   out_2569738049418641073[262] = 0;
   out_2569738049418641073[263] = 0;
   out_2569738049418641073[264] = 1;
   out_2569738049418641073[265] = 0;
   out_2569738049418641073[266] = 0;
   out_2569738049418641073[267] = 0;
   out_2569738049418641073[268] = 0;
   out_2569738049418641073[269] = 0;
   out_2569738049418641073[270] = 0;
   out_2569738049418641073[271] = 0;
   out_2569738049418641073[272] = 0;
   out_2569738049418641073[273] = 0;
   out_2569738049418641073[274] = 0;
   out_2569738049418641073[275] = 0;
   out_2569738049418641073[276] = 0;
   out_2569738049418641073[277] = 0;
   out_2569738049418641073[278] = 0;
   out_2569738049418641073[279] = 0;
   out_2569738049418641073[280] = 0;
   out_2569738049418641073[281] = 0;
   out_2569738049418641073[282] = 0;
   out_2569738049418641073[283] = 0;
   out_2569738049418641073[284] = 0;
   out_2569738049418641073[285] = 0;
   out_2569738049418641073[286] = 1;
   out_2569738049418641073[287] = 0;
   out_2569738049418641073[288] = 0;
   out_2569738049418641073[289] = 0;
   out_2569738049418641073[290] = 0;
   out_2569738049418641073[291] = 0;
   out_2569738049418641073[292] = 0;
   out_2569738049418641073[293] = 0;
   out_2569738049418641073[294] = 0;
   out_2569738049418641073[295] = 0;
   out_2569738049418641073[296] = 0;
   out_2569738049418641073[297] = 0;
   out_2569738049418641073[298] = 0;
   out_2569738049418641073[299] = 0;
   out_2569738049418641073[300] = 0;
   out_2569738049418641073[301] = 0;
   out_2569738049418641073[302] = 0;
   out_2569738049418641073[303] = 0;
   out_2569738049418641073[304] = 0;
   out_2569738049418641073[305] = 0;
   out_2569738049418641073[306] = 0;
   out_2569738049418641073[307] = 0;
   out_2569738049418641073[308] = 1;
   out_2569738049418641073[309] = 0;
   out_2569738049418641073[310] = 0;
   out_2569738049418641073[311] = 0;
   out_2569738049418641073[312] = 0;
   out_2569738049418641073[313] = 0;
   out_2569738049418641073[314] = 0;
   out_2569738049418641073[315] = 0;
   out_2569738049418641073[316] = 0;
   out_2569738049418641073[317] = 0;
   out_2569738049418641073[318] = 0;
   out_2569738049418641073[319] = 0;
   out_2569738049418641073[320] = 0;
   out_2569738049418641073[321] = 0;
   out_2569738049418641073[322] = 0;
   out_2569738049418641073[323] = 0;
   out_2569738049418641073[324] = 0;
   out_2569738049418641073[325] = 0;
   out_2569738049418641073[326] = 0;
   out_2569738049418641073[327] = 0;
   out_2569738049418641073[328] = 0;
   out_2569738049418641073[329] = 0;
   out_2569738049418641073[330] = 1;
   out_2569738049418641073[331] = 0;
   out_2569738049418641073[332] = 0;
   out_2569738049418641073[333] = 0;
   out_2569738049418641073[334] = 0;
   out_2569738049418641073[335] = 0;
   out_2569738049418641073[336] = 0;
   out_2569738049418641073[337] = 0;
   out_2569738049418641073[338] = 0;
   out_2569738049418641073[339] = 0;
   out_2569738049418641073[340] = 0;
   out_2569738049418641073[341] = 0;
   out_2569738049418641073[342] = 0;
   out_2569738049418641073[343] = 0;
   out_2569738049418641073[344] = 0;
   out_2569738049418641073[345] = 0;
   out_2569738049418641073[346] = 0;
   out_2569738049418641073[347] = 0;
   out_2569738049418641073[348] = 0;
   out_2569738049418641073[349] = 0;
   out_2569738049418641073[350] = 0;
   out_2569738049418641073[351] = 0;
   out_2569738049418641073[352] = 1;
   out_2569738049418641073[353] = 0;
   out_2569738049418641073[354] = 0;
   out_2569738049418641073[355] = 0;
   out_2569738049418641073[356] = 0;
   out_2569738049418641073[357] = 0;
   out_2569738049418641073[358] = 0;
   out_2569738049418641073[359] = 0;
   out_2569738049418641073[360] = 0;
   out_2569738049418641073[361] = 0;
   out_2569738049418641073[362] = 0;
   out_2569738049418641073[363] = 0;
   out_2569738049418641073[364] = 0;
   out_2569738049418641073[365] = 0;
   out_2569738049418641073[366] = 0;
   out_2569738049418641073[367] = 0;
   out_2569738049418641073[368] = 0;
   out_2569738049418641073[369] = 0;
   out_2569738049418641073[370] = 0;
   out_2569738049418641073[371] = 0;
   out_2569738049418641073[372] = 0;
   out_2569738049418641073[373] = 0;
   out_2569738049418641073[374] = 1;
   out_2569738049418641073[375] = 0;
   out_2569738049418641073[376] = 0;
   out_2569738049418641073[377] = 0;
   out_2569738049418641073[378] = 0;
   out_2569738049418641073[379] = 0;
   out_2569738049418641073[380] = 0;
   out_2569738049418641073[381] = 0;
   out_2569738049418641073[382] = 0;
   out_2569738049418641073[383] = 0;
   out_2569738049418641073[384] = 0;
   out_2569738049418641073[385] = 0;
   out_2569738049418641073[386] = 0;
   out_2569738049418641073[387] = 0;
   out_2569738049418641073[388] = 0;
   out_2569738049418641073[389] = 0;
   out_2569738049418641073[390] = 0;
   out_2569738049418641073[391] = 0;
   out_2569738049418641073[392] = 0;
   out_2569738049418641073[393] = 0;
   out_2569738049418641073[394] = 0;
   out_2569738049418641073[395] = 0;
   out_2569738049418641073[396] = 1;
   out_2569738049418641073[397] = 0;
   out_2569738049418641073[398] = 0;
   out_2569738049418641073[399] = 0;
   out_2569738049418641073[400] = 0;
   out_2569738049418641073[401] = 0;
   out_2569738049418641073[402] = 0;
   out_2569738049418641073[403] = 0;
   out_2569738049418641073[404] = 0;
   out_2569738049418641073[405] = 0;
   out_2569738049418641073[406] = 0;
   out_2569738049418641073[407] = 0;
   out_2569738049418641073[408] = 0;
   out_2569738049418641073[409] = 0;
   out_2569738049418641073[410] = 0;
   out_2569738049418641073[411] = 0;
   out_2569738049418641073[412] = 0;
   out_2569738049418641073[413] = 0;
   out_2569738049418641073[414] = 0;
   out_2569738049418641073[415] = 0;
   out_2569738049418641073[416] = 0;
   out_2569738049418641073[417] = 0;
   out_2569738049418641073[418] = 1;
   out_2569738049418641073[419] = 0;
   out_2569738049418641073[420] = 0;
   out_2569738049418641073[421] = 0;
   out_2569738049418641073[422] = 0;
   out_2569738049418641073[423] = 0;
   out_2569738049418641073[424] = 0;
   out_2569738049418641073[425] = 0;
   out_2569738049418641073[426] = 0;
   out_2569738049418641073[427] = 0;
   out_2569738049418641073[428] = 0;
   out_2569738049418641073[429] = 0;
   out_2569738049418641073[430] = 0;
   out_2569738049418641073[431] = 0;
   out_2569738049418641073[432] = 0;
   out_2569738049418641073[433] = 0;
   out_2569738049418641073[434] = 0;
   out_2569738049418641073[435] = 0;
   out_2569738049418641073[436] = 0;
   out_2569738049418641073[437] = 0;
   out_2569738049418641073[438] = 0;
   out_2569738049418641073[439] = 0;
   out_2569738049418641073[440] = 1;
}
void h_4(double *state, double *unused, double *out_6365147405598968614) {
   out_6365147405598968614[0] = state[10] + state[13];
   out_6365147405598968614[1] = state[11] + state[14];
   out_6365147405598968614[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8422102642620680189) {
   out_8422102642620680189[0] = 0;
   out_8422102642620680189[1] = 0;
   out_8422102642620680189[2] = 0;
   out_8422102642620680189[3] = 0;
   out_8422102642620680189[4] = 0;
   out_8422102642620680189[5] = 0;
   out_8422102642620680189[6] = 0;
   out_8422102642620680189[7] = 0;
   out_8422102642620680189[8] = 0;
   out_8422102642620680189[9] = 0;
   out_8422102642620680189[10] = 1;
   out_8422102642620680189[11] = 0;
   out_8422102642620680189[12] = 0;
   out_8422102642620680189[13] = 1;
   out_8422102642620680189[14] = 0;
   out_8422102642620680189[15] = 0;
   out_8422102642620680189[16] = 0;
   out_8422102642620680189[17] = 0;
   out_8422102642620680189[18] = 0;
   out_8422102642620680189[19] = 0;
   out_8422102642620680189[20] = 0;
   out_8422102642620680189[21] = 0;
   out_8422102642620680189[22] = 0;
   out_8422102642620680189[23] = 0;
   out_8422102642620680189[24] = 0;
   out_8422102642620680189[25] = 0;
   out_8422102642620680189[26] = 0;
   out_8422102642620680189[27] = 0;
   out_8422102642620680189[28] = 0;
   out_8422102642620680189[29] = 0;
   out_8422102642620680189[30] = 0;
   out_8422102642620680189[31] = 0;
   out_8422102642620680189[32] = 0;
   out_8422102642620680189[33] = 1;
   out_8422102642620680189[34] = 0;
   out_8422102642620680189[35] = 0;
   out_8422102642620680189[36] = 1;
   out_8422102642620680189[37] = 0;
   out_8422102642620680189[38] = 0;
   out_8422102642620680189[39] = 0;
   out_8422102642620680189[40] = 0;
   out_8422102642620680189[41] = 0;
   out_8422102642620680189[42] = 0;
   out_8422102642620680189[43] = 0;
   out_8422102642620680189[44] = 0;
   out_8422102642620680189[45] = 0;
   out_8422102642620680189[46] = 0;
   out_8422102642620680189[47] = 0;
   out_8422102642620680189[48] = 0;
   out_8422102642620680189[49] = 0;
   out_8422102642620680189[50] = 0;
   out_8422102642620680189[51] = 0;
   out_8422102642620680189[52] = 0;
   out_8422102642620680189[53] = 0;
   out_8422102642620680189[54] = 0;
   out_8422102642620680189[55] = 0;
   out_8422102642620680189[56] = 1;
   out_8422102642620680189[57] = 0;
   out_8422102642620680189[58] = 0;
   out_8422102642620680189[59] = 1;
   out_8422102642620680189[60] = 0;
   out_8422102642620680189[61] = 0;
   out_8422102642620680189[62] = 0;
   out_8422102642620680189[63] = 0;
   out_8422102642620680189[64] = 0;
   out_8422102642620680189[65] = 0;
}
void h_9(double *state, double *unused, double *out_4866059614826082472) {
   out_4866059614826082472[0] = state[10];
   out_4866059614826082472[1] = state[11];
   out_4866059614826082472[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8663292289250270834) {
   out_8663292289250270834[0] = 0;
   out_8663292289250270834[1] = 0;
   out_8663292289250270834[2] = 0;
   out_8663292289250270834[3] = 0;
   out_8663292289250270834[4] = 0;
   out_8663292289250270834[5] = 0;
   out_8663292289250270834[6] = 0;
   out_8663292289250270834[7] = 0;
   out_8663292289250270834[8] = 0;
   out_8663292289250270834[9] = 0;
   out_8663292289250270834[10] = 1;
   out_8663292289250270834[11] = 0;
   out_8663292289250270834[12] = 0;
   out_8663292289250270834[13] = 0;
   out_8663292289250270834[14] = 0;
   out_8663292289250270834[15] = 0;
   out_8663292289250270834[16] = 0;
   out_8663292289250270834[17] = 0;
   out_8663292289250270834[18] = 0;
   out_8663292289250270834[19] = 0;
   out_8663292289250270834[20] = 0;
   out_8663292289250270834[21] = 0;
   out_8663292289250270834[22] = 0;
   out_8663292289250270834[23] = 0;
   out_8663292289250270834[24] = 0;
   out_8663292289250270834[25] = 0;
   out_8663292289250270834[26] = 0;
   out_8663292289250270834[27] = 0;
   out_8663292289250270834[28] = 0;
   out_8663292289250270834[29] = 0;
   out_8663292289250270834[30] = 0;
   out_8663292289250270834[31] = 0;
   out_8663292289250270834[32] = 0;
   out_8663292289250270834[33] = 1;
   out_8663292289250270834[34] = 0;
   out_8663292289250270834[35] = 0;
   out_8663292289250270834[36] = 0;
   out_8663292289250270834[37] = 0;
   out_8663292289250270834[38] = 0;
   out_8663292289250270834[39] = 0;
   out_8663292289250270834[40] = 0;
   out_8663292289250270834[41] = 0;
   out_8663292289250270834[42] = 0;
   out_8663292289250270834[43] = 0;
   out_8663292289250270834[44] = 0;
   out_8663292289250270834[45] = 0;
   out_8663292289250270834[46] = 0;
   out_8663292289250270834[47] = 0;
   out_8663292289250270834[48] = 0;
   out_8663292289250270834[49] = 0;
   out_8663292289250270834[50] = 0;
   out_8663292289250270834[51] = 0;
   out_8663292289250270834[52] = 0;
   out_8663292289250270834[53] = 0;
   out_8663292289250270834[54] = 0;
   out_8663292289250270834[55] = 0;
   out_8663292289250270834[56] = 1;
   out_8663292289250270834[57] = 0;
   out_8663292289250270834[58] = 0;
   out_8663292289250270834[59] = 0;
   out_8663292289250270834[60] = 0;
   out_8663292289250270834[61] = 0;
   out_8663292289250270834[62] = 0;
   out_8663292289250270834[63] = 0;
   out_8663292289250270834[64] = 0;
   out_8663292289250270834[65] = 0;
}
void h_10(double *state, double *unused, double *out_5112365462136489217) {
   out_5112365462136489217[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5112365462136489217[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5112365462136489217[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5631211871600410720) {
   out_5631211871600410720[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5631211871600410720[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5631211871600410720[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5631211871600410720[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5631211871600410720[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5631211871600410720[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5631211871600410720[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5631211871600410720[7] = 0;
   out_5631211871600410720[8] = 0;
   out_5631211871600410720[9] = 0;
   out_5631211871600410720[10] = 0;
   out_5631211871600410720[11] = 0;
   out_5631211871600410720[12] = 0;
   out_5631211871600410720[13] = 0;
   out_5631211871600410720[14] = 0;
   out_5631211871600410720[15] = 0;
   out_5631211871600410720[16] = 1;
   out_5631211871600410720[17] = 0;
   out_5631211871600410720[18] = 0;
   out_5631211871600410720[19] = 1;
   out_5631211871600410720[20] = 0;
   out_5631211871600410720[21] = 0;
   out_5631211871600410720[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5631211871600410720[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5631211871600410720[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5631211871600410720[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5631211871600410720[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5631211871600410720[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5631211871600410720[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5631211871600410720[29] = 0;
   out_5631211871600410720[30] = 0;
   out_5631211871600410720[31] = 0;
   out_5631211871600410720[32] = 0;
   out_5631211871600410720[33] = 0;
   out_5631211871600410720[34] = 0;
   out_5631211871600410720[35] = 0;
   out_5631211871600410720[36] = 0;
   out_5631211871600410720[37] = 0;
   out_5631211871600410720[38] = 0;
   out_5631211871600410720[39] = 1;
   out_5631211871600410720[40] = 0;
   out_5631211871600410720[41] = 0;
   out_5631211871600410720[42] = 1;
   out_5631211871600410720[43] = 0;
   out_5631211871600410720[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5631211871600410720[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5631211871600410720[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5631211871600410720[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5631211871600410720[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5631211871600410720[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5631211871600410720[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5631211871600410720[51] = 0;
   out_5631211871600410720[52] = 0;
   out_5631211871600410720[53] = 0;
   out_5631211871600410720[54] = 0;
   out_5631211871600410720[55] = 0;
   out_5631211871600410720[56] = 0;
   out_5631211871600410720[57] = 0;
   out_5631211871600410720[58] = 0;
   out_5631211871600410720[59] = 0;
   out_5631211871600410720[60] = 0;
   out_5631211871600410720[61] = 0;
   out_5631211871600410720[62] = 1;
   out_5631211871600410720[63] = 0;
   out_5631211871600410720[64] = 0;
   out_5631211871600410720[65] = 1;
}
void h_12(double *state, double *unused, double *out_6804380459216229846) {
   out_6804380459216229846[0] = state[0];
   out_6804380459216229846[1] = state[1];
   out_6804380459216229846[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5005185023056909632) {
   out_5005185023056909632[0] = 1;
   out_5005185023056909632[1] = 0;
   out_5005185023056909632[2] = 0;
   out_5005185023056909632[3] = 0;
   out_5005185023056909632[4] = 0;
   out_5005185023056909632[5] = 0;
   out_5005185023056909632[6] = 0;
   out_5005185023056909632[7] = 0;
   out_5005185023056909632[8] = 0;
   out_5005185023056909632[9] = 0;
   out_5005185023056909632[10] = 0;
   out_5005185023056909632[11] = 0;
   out_5005185023056909632[12] = 0;
   out_5005185023056909632[13] = 0;
   out_5005185023056909632[14] = 0;
   out_5005185023056909632[15] = 0;
   out_5005185023056909632[16] = 0;
   out_5005185023056909632[17] = 0;
   out_5005185023056909632[18] = 0;
   out_5005185023056909632[19] = 0;
   out_5005185023056909632[20] = 0;
   out_5005185023056909632[21] = 0;
   out_5005185023056909632[22] = 0;
   out_5005185023056909632[23] = 1;
   out_5005185023056909632[24] = 0;
   out_5005185023056909632[25] = 0;
   out_5005185023056909632[26] = 0;
   out_5005185023056909632[27] = 0;
   out_5005185023056909632[28] = 0;
   out_5005185023056909632[29] = 0;
   out_5005185023056909632[30] = 0;
   out_5005185023056909632[31] = 0;
   out_5005185023056909632[32] = 0;
   out_5005185023056909632[33] = 0;
   out_5005185023056909632[34] = 0;
   out_5005185023056909632[35] = 0;
   out_5005185023056909632[36] = 0;
   out_5005185023056909632[37] = 0;
   out_5005185023056909632[38] = 0;
   out_5005185023056909632[39] = 0;
   out_5005185023056909632[40] = 0;
   out_5005185023056909632[41] = 0;
   out_5005185023056909632[42] = 0;
   out_5005185023056909632[43] = 0;
   out_5005185023056909632[44] = 0;
   out_5005185023056909632[45] = 0;
   out_5005185023056909632[46] = 1;
   out_5005185023056909632[47] = 0;
   out_5005185023056909632[48] = 0;
   out_5005185023056909632[49] = 0;
   out_5005185023056909632[50] = 0;
   out_5005185023056909632[51] = 0;
   out_5005185023056909632[52] = 0;
   out_5005185023056909632[53] = 0;
   out_5005185023056909632[54] = 0;
   out_5005185023056909632[55] = 0;
   out_5005185023056909632[56] = 0;
   out_5005185023056909632[57] = 0;
   out_5005185023056909632[58] = 0;
   out_5005185023056909632[59] = 0;
   out_5005185023056909632[60] = 0;
   out_5005185023056909632[61] = 0;
   out_5005185023056909632[62] = 0;
   out_5005185023056909632[63] = 0;
   out_5005185023056909632[64] = 0;
   out_5005185023056909632[65] = 0;
}
void h_31(double *state, double *unused, double *out_1382977200322234885) {
   out_1382977200322234885[0] = state[7];
   out_1382977200322234885[1] = state[8];
   out_1382977200322234885[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2259621990731895923) {
   out_2259621990731895923[0] = 0;
   out_2259621990731895923[1] = 0;
   out_2259621990731895923[2] = 0;
   out_2259621990731895923[3] = 0;
   out_2259621990731895923[4] = 0;
   out_2259621990731895923[5] = 0;
   out_2259621990731895923[6] = 0;
   out_2259621990731895923[7] = 1;
   out_2259621990731895923[8] = 0;
   out_2259621990731895923[9] = 0;
   out_2259621990731895923[10] = 0;
   out_2259621990731895923[11] = 0;
   out_2259621990731895923[12] = 0;
   out_2259621990731895923[13] = 0;
   out_2259621990731895923[14] = 0;
   out_2259621990731895923[15] = 0;
   out_2259621990731895923[16] = 0;
   out_2259621990731895923[17] = 0;
   out_2259621990731895923[18] = 0;
   out_2259621990731895923[19] = 0;
   out_2259621990731895923[20] = 0;
   out_2259621990731895923[21] = 0;
   out_2259621990731895923[22] = 0;
   out_2259621990731895923[23] = 0;
   out_2259621990731895923[24] = 0;
   out_2259621990731895923[25] = 0;
   out_2259621990731895923[26] = 0;
   out_2259621990731895923[27] = 0;
   out_2259621990731895923[28] = 0;
   out_2259621990731895923[29] = 0;
   out_2259621990731895923[30] = 1;
   out_2259621990731895923[31] = 0;
   out_2259621990731895923[32] = 0;
   out_2259621990731895923[33] = 0;
   out_2259621990731895923[34] = 0;
   out_2259621990731895923[35] = 0;
   out_2259621990731895923[36] = 0;
   out_2259621990731895923[37] = 0;
   out_2259621990731895923[38] = 0;
   out_2259621990731895923[39] = 0;
   out_2259621990731895923[40] = 0;
   out_2259621990731895923[41] = 0;
   out_2259621990731895923[42] = 0;
   out_2259621990731895923[43] = 0;
   out_2259621990731895923[44] = 0;
   out_2259621990731895923[45] = 0;
   out_2259621990731895923[46] = 0;
   out_2259621990731895923[47] = 0;
   out_2259621990731895923[48] = 0;
   out_2259621990731895923[49] = 0;
   out_2259621990731895923[50] = 0;
   out_2259621990731895923[51] = 0;
   out_2259621990731895923[52] = 0;
   out_2259621990731895923[53] = 1;
   out_2259621990731895923[54] = 0;
   out_2259621990731895923[55] = 0;
   out_2259621990731895923[56] = 0;
   out_2259621990731895923[57] = 0;
   out_2259621990731895923[58] = 0;
   out_2259621990731895923[59] = 0;
   out_2259621990731895923[60] = 0;
   out_2259621990731895923[61] = 0;
   out_2259621990731895923[62] = 0;
   out_2259621990731895923[63] = 0;
   out_2259621990731895923[64] = 0;
   out_2259621990731895923[65] = 0;
}
void h_32(double *state, double *unused, double *out_8224451516702920237) {
   out_8224451516702920237[0] = state[3];
   out_8224451516702920237[1] = state[4];
   out_8224451516702920237[2] = state[5];
   out_8224451516702920237[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7570065462321378495) {
   out_7570065462321378495[0] = 0;
   out_7570065462321378495[1] = 0;
   out_7570065462321378495[2] = 0;
   out_7570065462321378495[3] = 1;
   out_7570065462321378495[4] = 0;
   out_7570065462321378495[5] = 0;
   out_7570065462321378495[6] = 0;
   out_7570065462321378495[7] = 0;
   out_7570065462321378495[8] = 0;
   out_7570065462321378495[9] = 0;
   out_7570065462321378495[10] = 0;
   out_7570065462321378495[11] = 0;
   out_7570065462321378495[12] = 0;
   out_7570065462321378495[13] = 0;
   out_7570065462321378495[14] = 0;
   out_7570065462321378495[15] = 0;
   out_7570065462321378495[16] = 0;
   out_7570065462321378495[17] = 0;
   out_7570065462321378495[18] = 0;
   out_7570065462321378495[19] = 0;
   out_7570065462321378495[20] = 0;
   out_7570065462321378495[21] = 0;
   out_7570065462321378495[22] = 0;
   out_7570065462321378495[23] = 0;
   out_7570065462321378495[24] = 0;
   out_7570065462321378495[25] = 0;
   out_7570065462321378495[26] = 1;
   out_7570065462321378495[27] = 0;
   out_7570065462321378495[28] = 0;
   out_7570065462321378495[29] = 0;
   out_7570065462321378495[30] = 0;
   out_7570065462321378495[31] = 0;
   out_7570065462321378495[32] = 0;
   out_7570065462321378495[33] = 0;
   out_7570065462321378495[34] = 0;
   out_7570065462321378495[35] = 0;
   out_7570065462321378495[36] = 0;
   out_7570065462321378495[37] = 0;
   out_7570065462321378495[38] = 0;
   out_7570065462321378495[39] = 0;
   out_7570065462321378495[40] = 0;
   out_7570065462321378495[41] = 0;
   out_7570065462321378495[42] = 0;
   out_7570065462321378495[43] = 0;
   out_7570065462321378495[44] = 0;
   out_7570065462321378495[45] = 0;
   out_7570065462321378495[46] = 0;
   out_7570065462321378495[47] = 0;
   out_7570065462321378495[48] = 0;
   out_7570065462321378495[49] = 1;
   out_7570065462321378495[50] = 0;
   out_7570065462321378495[51] = 0;
   out_7570065462321378495[52] = 0;
   out_7570065462321378495[53] = 0;
   out_7570065462321378495[54] = 0;
   out_7570065462321378495[55] = 0;
   out_7570065462321378495[56] = 0;
   out_7570065462321378495[57] = 0;
   out_7570065462321378495[58] = 0;
   out_7570065462321378495[59] = 0;
   out_7570065462321378495[60] = 0;
   out_7570065462321378495[61] = 0;
   out_7570065462321378495[62] = 0;
   out_7570065462321378495[63] = 0;
   out_7570065462321378495[64] = 0;
   out_7570065462321378495[65] = 0;
   out_7570065462321378495[66] = 0;
   out_7570065462321378495[67] = 0;
   out_7570065462321378495[68] = 0;
   out_7570065462321378495[69] = 0;
   out_7570065462321378495[70] = 0;
   out_7570065462321378495[71] = 0;
   out_7570065462321378495[72] = 1;
   out_7570065462321378495[73] = 0;
   out_7570065462321378495[74] = 0;
   out_7570065462321378495[75] = 0;
   out_7570065462321378495[76] = 0;
   out_7570065462321378495[77] = 0;
   out_7570065462321378495[78] = 0;
   out_7570065462321378495[79] = 0;
   out_7570065462321378495[80] = 0;
   out_7570065462321378495[81] = 0;
   out_7570065462321378495[82] = 0;
   out_7570065462321378495[83] = 0;
   out_7570065462321378495[84] = 0;
   out_7570065462321378495[85] = 0;
   out_7570065462321378495[86] = 0;
   out_7570065462321378495[87] = 0;
}
void h_13(double *state, double *unused, double *out_4454733693100208891) {
   out_4454733693100208891[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4454733693100208891[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4454733693100208891[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5638774433905861398) {
   out_5638774433905861398[0] = 0;
   out_5638774433905861398[1] = 0;
   out_5638774433905861398[2] = 0;
   out_5638774433905861398[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5638774433905861398[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5638774433905861398[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5638774433905861398[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5638774433905861398[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5638774433905861398[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5638774433905861398[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5638774433905861398[10] = 0;
   out_5638774433905861398[11] = 0;
   out_5638774433905861398[12] = 0;
   out_5638774433905861398[13] = 0;
   out_5638774433905861398[14] = 0;
   out_5638774433905861398[15] = 0;
   out_5638774433905861398[16] = 0;
   out_5638774433905861398[17] = 0;
   out_5638774433905861398[18] = 0;
   out_5638774433905861398[19] = 0;
   out_5638774433905861398[20] = 0;
   out_5638774433905861398[21] = 0;
   out_5638774433905861398[22] = 0;
   out_5638774433905861398[23] = 0;
   out_5638774433905861398[24] = 0;
   out_5638774433905861398[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5638774433905861398[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5638774433905861398[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5638774433905861398[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5638774433905861398[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5638774433905861398[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5638774433905861398[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5638774433905861398[32] = 0;
   out_5638774433905861398[33] = 0;
   out_5638774433905861398[34] = 0;
   out_5638774433905861398[35] = 0;
   out_5638774433905861398[36] = 0;
   out_5638774433905861398[37] = 0;
   out_5638774433905861398[38] = 0;
   out_5638774433905861398[39] = 0;
   out_5638774433905861398[40] = 0;
   out_5638774433905861398[41] = 0;
   out_5638774433905861398[42] = 0;
   out_5638774433905861398[43] = 0;
   out_5638774433905861398[44] = 0;
   out_5638774433905861398[45] = 0;
   out_5638774433905861398[46] = 0;
   out_5638774433905861398[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5638774433905861398[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5638774433905861398[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5638774433905861398[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5638774433905861398[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5638774433905861398[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5638774433905861398[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5638774433905861398[54] = 0;
   out_5638774433905861398[55] = 0;
   out_5638774433905861398[56] = 0;
   out_5638774433905861398[57] = 0;
   out_5638774433905861398[58] = 0;
   out_5638774433905861398[59] = 0;
   out_5638774433905861398[60] = 0;
   out_5638774433905861398[61] = 0;
   out_5638774433905861398[62] = 0;
   out_5638774433905861398[63] = 0;
   out_5638774433905861398[64] = 0;
   out_5638774433905861398[65] = 0;
}
void h_14(double *state, double *unused, double *out_4866059614826082472) {
   out_4866059614826082472[0] = state[10];
   out_4866059614826082472[1] = state[11];
   out_4866059614826082472[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8663292289250270834) {
   out_8663292289250270834[0] = 0;
   out_8663292289250270834[1] = 0;
   out_8663292289250270834[2] = 0;
   out_8663292289250270834[3] = 0;
   out_8663292289250270834[4] = 0;
   out_8663292289250270834[5] = 0;
   out_8663292289250270834[6] = 0;
   out_8663292289250270834[7] = 0;
   out_8663292289250270834[8] = 0;
   out_8663292289250270834[9] = 0;
   out_8663292289250270834[10] = 1;
   out_8663292289250270834[11] = 0;
   out_8663292289250270834[12] = 0;
   out_8663292289250270834[13] = 0;
   out_8663292289250270834[14] = 0;
   out_8663292289250270834[15] = 0;
   out_8663292289250270834[16] = 0;
   out_8663292289250270834[17] = 0;
   out_8663292289250270834[18] = 0;
   out_8663292289250270834[19] = 0;
   out_8663292289250270834[20] = 0;
   out_8663292289250270834[21] = 0;
   out_8663292289250270834[22] = 0;
   out_8663292289250270834[23] = 0;
   out_8663292289250270834[24] = 0;
   out_8663292289250270834[25] = 0;
   out_8663292289250270834[26] = 0;
   out_8663292289250270834[27] = 0;
   out_8663292289250270834[28] = 0;
   out_8663292289250270834[29] = 0;
   out_8663292289250270834[30] = 0;
   out_8663292289250270834[31] = 0;
   out_8663292289250270834[32] = 0;
   out_8663292289250270834[33] = 1;
   out_8663292289250270834[34] = 0;
   out_8663292289250270834[35] = 0;
   out_8663292289250270834[36] = 0;
   out_8663292289250270834[37] = 0;
   out_8663292289250270834[38] = 0;
   out_8663292289250270834[39] = 0;
   out_8663292289250270834[40] = 0;
   out_8663292289250270834[41] = 0;
   out_8663292289250270834[42] = 0;
   out_8663292289250270834[43] = 0;
   out_8663292289250270834[44] = 0;
   out_8663292289250270834[45] = 0;
   out_8663292289250270834[46] = 0;
   out_8663292289250270834[47] = 0;
   out_8663292289250270834[48] = 0;
   out_8663292289250270834[49] = 0;
   out_8663292289250270834[50] = 0;
   out_8663292289250270834[51] = 0;
   out_8663292289250270834[52] = 0;
   out_8663292289250270834[53] = 0;
   out_8663292289250270834[54] = 0;
   out_8663292289250270834[55] = 0;
   out_8663292289250270834[56] = 1;
   out_8663292289250270834[57] = 0;
   out_8663292289250270834[58] = 0;
   out_8663292289250270834[59] = 0;
   out_8663292289250270834[60] = 0;
   out_8663292289250270834[61] = 0;
   out_8663292289250270834[62] = 0;
   out_8663292289250270834[63] = 0;
   out_8663292289250270834[64] = 0;
   out_8663292289250270834[65] = 0;
}
void h_33(double *state, double *unused, double *out_8845191609115125344) {
   out_8845191609115125344[0] = state[16];
   out_8845191609115125344[1] = state[17];
   out_8845191609115125344[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3507422369077406447) {
   out_3507422369077406447[0] = 0;
   out_3507422369077406447[1] = 0;
   out_3507422369077406447[2] = 0;
   out_3507422369077406447[3] = 0;
   out_3507422369077406447[4] = 0;
   out_3507422369077406447[5] = 0;
   out_3507422369077406447[6] = 0;
   out_3507422369077406447[7] = 0;
   out_3507422369077406447[8] = 0;
   out_3507422369077406447[9] = 0;
   out_3507422369077406447[10] = 0;
   out_3507422369077406447[11] = 0;
   out_3507422369077406447[12] = 0;
   out_3507422369077406447[13] = 0;
   out_3507422369077406447[14] = 0;
   out_3507422369077406447[15] = 0;
   out_3507422369077406447[16] = 1;
   out_3507422369077406447[17] = 0;
   out_3507422369077406447[18] = 0;
   out_3507422369077406447[19] = 0;
   out_3507422369077406447[20] = 0;
   out_3507422369077406447[21] = 0;
   out_3507422369077406447[22] = 0;
   out_3507422369077406447[23] = 0;
   out_3507422369077406447[24] = 0;
   out_3507422369077406447[25] = 0;
   out_3507422369077406447[26] = 0;
   out_3507422369077406447[27] = 0;
   out_3507422369077406447[28] = 0;
   out_3507422369077406447[29] = 0;
   out_3507422369077406447[30] = 0;
   out_3507422369077406447[31] = 0;
   out_3507422369077406447[32] = 0;
   out_3507422369077406447[33] = 0;
   out_3507422369077406447[34] = 0;
   out_3507422369077406447[35] = 0;
   out_3507422369077406447[36] = 0;
   out_3507422369077406447[37] = 0;
   out_3507422369077406447[38] = 0;
   out_3507422369077406447[39] = 1;
   out_3507422369077406447[40] = 0;
   out_3507422369077406447[41] = 0;
   out_3507422369077406447[42] = 0;
   out_3507422369077406447[43] = 0;
   out_3507422369077406447[44] = 0;
   out_3507422369077406447[45] = 0;
   out_3507422369077406447[46] = 0;
   out_3507422369077406447[47] = 0;
   out_3507422369077406447[48] = 0;
   out_3507422369077406447[49] = 0;
   out_3507422369077406447[50] = 0;
   out_3507422369077406447[51] = 0;
   out_3507422369077406447[52] = 0;
   out_3507422369077406447[53] = 0;
   out_3507422369077406447[54] = 0;
   out_3507422369077406447[55] = 0;
   out_3507422369077406447[56] = 0;
   out_3507422369077406447[57] = 0;
   out_3507422369077406447[58] = 0;
   out_3507422369077406447[59] = 0;
   out_3507422369077406447[60] = 0;
   out_3507422369077406447[61] = 0;
   out_3507422369077406447[62] = 1;
   out_3507422369077406447[63] = 0;
   out_3507422369077406447[64] = 0;
   out_3507422369077406447[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_180823419254858442) {
  H(in_vec, out_180823419254858442);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_382937832037016470) {
  err_fun(nom_x, delta_x, out_382937832037016470);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6356608129355425497) {
  inv_err_fun(nom_x, true_x, out_6356608129355425497);
}
void live_H_mod_fun(double *state, double *out_6159620833474390477) {
  H_mod_fun(state, out_6159620833474390477);
}
void live_f_fun(double *state, double dt, double *out_6910680473094794463) {
  f_fun(state,  dt, out_6910680473094794463);
}
void live_F_fun(double *state, double dt, double *out_2569738049418641073) {
  F_fun(state,  dt, out_2569738049418641073);
}
void live_h_4(double *state, double *unused, double *out_6365147405598968614) {
  h_4(state, unused, out_6365147405598968614);
}
void live_H_4(double *state, double *unused, double *out_8422102642620680189) {
  H_4(state, unused, out_8422102642620680189);
}
void live_h_9(double *state, double *unused, double *out_4866059614826082472) {
  h_9(state, unused, out_4866059614826082472);
}
void live_H_9(double *state, double *unused, double *out_8663292289250270834) {
  H_9(state, unused, out_8663292289250270834);
}
void live_h_10(double *state, double *unused, double *out_5112365462136489217) {
  h_10(state, unused, out_5112365462136489217);
}
void live_H_10(double *state, double *unused, double *out_5631211871600410720) {
  H_10(state, unused, out_5631211871600410720);
}
void live_h_12(double *state, double *unused, double *out_6804380459216229846) {
  h_12(state, unused, out_6804380459216229846);
}
void live_H_12(double *state, double *unused, double *out_5005185023056909632) {
  H_12(state, unused, out_5005185023056909632);
}
void live_h_31(double *state, double *unused, double *out_1382977200322234885) {
  h_31(state, unused, out_1382977200322234885);
}
void live_H_31(double *state, double *unused, double *out_2259621990731895923) {
  H_31(state, unused, out_2259621990731895923);
}
void live_h_32(double *state, double *unused, double *out_8224451516702920237) {
  h_32(state, unused, out_8224451516702920237);
}
void live_H_32(double *state, double *unused, double *out_7570065462321378495) {
  H_32(state, unused, out_7570065462321378495);
}
void live_h_13(double *state, double *unused, double *out_4454733693100208891) {
  h_13(state, unused, out_4454733693100208891);
}
void live_H_13(double *state, double *unused, double *out_5638774433905861398) {
  H_13(state, unused, out_5638774433905861398);
}
void live_h_14(double *state, double *unused, double *out_4866059614826082472) {
  h_14(state, unused, out_4866059614826082472);
}
void live_H_14(double *state, double *unused, double *out_8663292289250270834) {
  H_14(state, unused, out_8663292289250270834);
}
void live_h_33(double *state, double *unused, double *out_8845191609115125344) {
  h_33(state, unused, out_8845191609115125344);
}
void live_H_33(double *state, double *unused, double *out_3507422369077406447) {
  H_33(state, unused, out_3507422369077406447);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
